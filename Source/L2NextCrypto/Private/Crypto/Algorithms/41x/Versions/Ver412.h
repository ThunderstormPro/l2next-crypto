#ifndef H_VER412
#define H_VER412

#include "Crypto/Enums/HeaderVersion.h"
#include "Crypto/Algorithms/Base/Algorithm.h"
#include "Crypto/Algorithms/41x/Shared/Ver41xParams.h"
#include "Crypto/Algorithms/41x/Duplex/Ver41xEncDuplex.h"
#include "Crypto/Algorithms/41x/Duplex/Ver41xDecDuplex.h"

class Ver412 : public Algorithm, public Ver41xParams
{
public:
	Ver412()
	{
		version = VER_412;

		modulus = {
			0xa4, 0x65, 0x13, 0x47, 0x99, 0xcf, 0x2c, 0x45,
			0x08, 0x70, 0x93, 0xe7, 0xd0, 0xf0, 0xf1, 0x44,
			0xe6, 0xd5, 0x28, 0x11, 0x0c, 0x08, 0xf6, 0x74,
			0x73, 0x0d, 0x43, 0x6e, 0x40, 0x82, 0x73, 0x30,
			0xec, 0xce, 0xa4, 0x6e, 0x70, 0xac, 0xf1, 0x0c,
			0xdd, 0xa7, 0xd8, 0xf7, 0x10, 0xe3, 0xb4, 0x4d,
			0xcc, 0xa9, 0x31, 0x81, 0x2d, 0x76, 0xcd, 0x74,
			0x94, 0x28, 0x9b, 0xca, 0x8b, 0x73, 0x82, 0x3f,
			0x57, 0xef, 0xc0, 0x51, 0x5b, 0x97, 0xe4, 0xa2,
			0xa0, 0x26, 0x12, 0xcc, 0xfa, 0x71, 0x9c, 0xf7,
			0x88, 0x51, 0x04, 0xb0, 0x6f, 0x2e, 0x7e, 0x2c,
			0xc9, 0x67, 0xb6, 0x2e, 0x3d, 0x3b, 0x1a, 0xad,
			0xb9, 0x25, 0xdb, 0x94, 0xcb, 0xc8, 0xcd, 0x30,
			0x70, 0xa4, 0xbb, 0x13, 0xf7, 0xe2, 0x02, 0xc7,
			0x73, 0x3a, 0x67, 0xb1, 0xb9, 0x4c, 0x1e, 0xbc,
			0x0a, 0xfc, 0xbe, 0x1a, 0x63, 0xb4, 0x48, 0xcf
		};

		exponent = 0x25;

		duplex = {
			std::make_shared<Ver41xEncDuplex>(*this),
			std::make_shared<Ver41xDecDuplex>(*this)
		};
	}
};

#endif // H_VER412
