#ifndef H_VER414
#define H_VER414

#include "Crypto/Enums/HeaderVersion.h"
#include "Crypto/Algorithms/Base/Algorithm.h"
#include "Crypto/Algorithms/41x/Shared/Ver41xParams.h"

using namespace::std;

class Ver414 : public Algorithm, public Ver41xParams
{
public:
	Ver414()
	{
		version = VER_414;

		modulus = {
			0xad, 0x70, 0x25, 0x7b, 0x23, 0x16, 0xce, 0x09,
			0xdf, 0xaf, 0x2e, 0xbc, 0x3f, 0x63, 0xb3, 0xd6,
			0x73, 0xb0, 0xc9, 0x8a, 0x40, 0x39, 0x50, 0xe2,
			0x6b, 0xb8, 0x73, 0x79, 0xb1, 0x1e, 0x17, 0xae,
			0xd0, 0xe4, 0x5a, 0xf2, 0x3e, 0x71, 0x71, 0xe5,
			0xec, 0x1f, 0xbc, 0x8d, 0x1a, 0xe3, 0x2f, 0xfb,
			0x78, 0x01, 0xb3, 0x12, 0x66, 0xee, 0xf9, 0xc3,
			0x34, 0xb5, 0x34, 0x69, 0xd4, 0xb7, 0xcb, 0xe8,
			0x32, 0x84, 0x27, 0x3d, 0x35, 0xa9, 0xaa, 0xb4,
			0x9b, 0x45, 0x3e, 0x70, 0x12, 0xf3, 0x74, 0x49,
			0x6c, 0x65, 0xf8, 0x08, 0x9f, 0x5d, 0x13, 0x4b,
			0x0e, 0xb3, 0xd1, 0xe3, 0xb2, 0x20, 0x51, 0xed,
			0x59, 0x77, 0xa6, 0xdd, 0x68, 0xc4, 0xf8, 0x57,
			0x85, 0xdf, 0xcc, 0x9f, 0x44, 0x12, 0xc8, 0x16,
			0x81, 0x94, 0x4f, 0xc4, 0xb8, 0xce, 0x27, 0xca,
			0xf0, 0x24, 0x2d, 0xea, 0xa5, 0x76, 0x2e, 0x8d
		};

		exponent = 0x25;

		duplex = {
			StreamFactory::Make<Ver41xEncDuplex>(*this),
			StreamFactory::Make<Ver41xDecDuplex>(*this)
		};
	}
};

#endif // H_VER414
